basePath: /
definitions:
  models.CreateUserRequest:
    properties:
      email:
        example: yusuf@gmail.com
        type: string
      password:
        example: log123
        type: string
      username:
        example: yusuf_bahtr
        type: string
    type: object
  utils.Response:
    properties:
      errors: {}
      message:
        type: string
      results: {}
      success:
        type: boolean
    type: object
info:
  contact: {}
  description: This Simple CRUD server
  title: CRUD Users
  version: "1.0"
paths:
  /upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload a file to server
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Upload a file
      tags:
      - upload
  /users:
    get:
      consumes:
      - application/json
      description: List All Users
      produces:
      - application/json
      responses:
        "200":
          description: string
          schema:
            type: string
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: User data
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: string
          schema:
            $ref: '#/definitions/models.CreateUserRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: string
          schema:
            type: string
      tags:
      - users
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: string
          schema:
            type: string
      tags:
      - users
    patch:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: string
          schema:
            type: string
      tags:
      - users
swagger: "2.0"
